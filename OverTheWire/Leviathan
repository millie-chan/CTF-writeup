# Leviathan Level 0 → Level 1
ssh leviathan0@leviathan.labs.overthewire.org -p 2223
ls -al /etc/leviathan_pass
found that only the user of that level can access that file
as mentioned in task, check home directory
ls -al /home
you will find that every one could read and access(the x permission of direcory) leviathan* folder, let's access to level 0 first
ls -al /home/leviathan0
ls -al /home/leviathan0/.backup
cat /home/leviathan0/.backup/bookmarks.html
it's a large file, let's use grep
cat /home/leviathan0/.backup/bookmarks.html | grep leviathan1
the password for leviathan1 is PPIfmI1qsA

# Leviathan Level 1 → Level 2
ssh leviathan1@leviathan.labs.overthewire.org -p 2223
ls -al /home/leviathan1
there is a s in permission, go to google, it means we can use leviathan1 to run this program as if we were leviathan2
  looks like we will need it to check the password in /etc/leviathan_pass/leviathan2
cat /home/leviathan1/check
it is a binary file, try grep first, nothing
be brave to run it
/home/leviathan1/check
it shows "password:", then try leviathan1 password first
then it returns "Wrong password, Good Bye ...", looks like it read the content of /etc/leviathan_pass/leviathan2
tried a long input, didnt work, so seems not related to buffer overflow
gave up and go to google https://mayadevbe.me/posts/overthewire/leviathan/level2/
there is a command called ltrace, which can show the call to shared library
then we run ltrace /home/leviathan1/check
after we type something such as test, we can see there is a line: strcmp("tes", "sex") 
tes is the first three chars of test, let's try enter "bun" and then we get strcmp("bun", "sex") 
finally we know the "password" is sex, after entering "sex", it returns a shell
run whoami, confirm that we are leviathan2 now
then cat /etc/leviathan_pass/leviathan2, got mEh5PNl10e
---
wait, if ltrace works, which means other reverse engineering tools should work too, let's try another one
first, download the check file to local
scp -P 2223 leviathan1@leviathan.labs.overthewire.org:/home/leviathan1/check .
hardly have any experience on reverse engineering, let's follow https://null-byte.wonderhowto.com/how-to/reverse-engineering-with-radare2-a-quick-introduction-0165996/
r2 check
aa
pdf @ sym.main
not familiar with assembly, but before strcmp, we can see two variables, var_20h and var_24h
we look into those "mov", var_20h is 'sex', get char put into var_24h and then var_23h then finally var_22h
address from 8845dc to 88845de is the word, then goes to an end (mov byte [var_21h], 0)
seems ltrace is more newbie-friendly XD

# Leviathan Level 2 → Level 3
ssh leviathan2@leviathan.labs.overthewire.org -p 2223
ls -al
  similar to last time, there is a setuid executable
file printfile
  similar to last time
strings printfile
  nothing stands out but this
  *** File Printer ***
  Usage: %s filename
  You cant have that file...
  /bin/cat %s
./printfile
  *** File Printer ***
  Usage: ./printfile filename
ltrace ./printfile /etc/leviathan_pass/leviathan3
  __libc_start_main(0x80491e6, 2, 0xffffd684, 0 <unfinished ...>
  access("/etc/leviathan_pass/leviathan3", 4)                   = -1
  puts("You cant have that file..."You cant have that file...
  )                            = 27
  +++ exited (status 1) +++
  googled access() function, https://www.gnu.org/software/libc/manual/html_node/Testing-File-Access.html
  This function uses the real user and group IDs of the calling process, rather than the effective IDs, to check for access permission. 
  As a result, if you use the function from a setuid or setgid program (see How an Application Can Change Persona), 
  it gives information relative to the user who actually ran the program.
ltrace ./printfile /etc/leviathan_pass/leviathan2
  __libc_start_main(0x80491e6, 2, 0xffffd684, 0 <unfinished ...>
  access("/etc/leviathan_pass/leviathan2", 4)                   = 0
  snprintf("/bin/cat /etc/leviathan_pass/lev"..., 511, "/bin/cat %s", "/etc/leviathan_pass/leviathan2") = 39
  geteuid()                                                     = 12002
  geteuid()                                                     = 12002
  setreuid(12002, 12002)                                        = 0
  system("/bin/cat /etc/leviathan_pass/lev"...mEh5PNl10e
   <no return ...>
  --- SIGCHLD (Child exited) ---
  <... system resumed> )                                        = 0
  +++ exited (status 0) +++
  there are two things looks helpful, firstly we can see the system command, secondly we can see the password of leviathan2
./printfile /etc/leviathan_pass/leviathan2
  You cant have that file...
  but when we run without ltrace, it shows permission denied
  it seems that the access() checking use the real runner(leviathan2), but the system() use the file owner(leviathan3)
  then if we could use a space to separate the command, we could bypass the access 
/bin/cat /etc/leviathan_pass/leviathan2 /etc/leviathan_pass/leviathan3
  if we run this, we could see it try to cat leviathan3 as well
  but we could not use "leviathan2 /etc/leviathan_pass/leviathan3" as filename because filename could not have slash
  to get rid of slash, we could create symbolic soft link to /etc/leviathan_pass/leviathan3
  to create soft link, we need to find which directory we have write permission, which is usually /tmp
ls -al /
  confirmed that every user has write permission of /tmp, although without read 
mkdir /tmp/tmp20240605
ln -s /etc/leviathan_pass/leviathan3 test
touch '/tmp/tmp20240605/test dummy'
  at this point, we created a file which namd "test dummy", and the final command would be "/bin/cat test dummy"
./printfile "/tmp/tmp20240605/test dummy"
 the first line is the password of leviathan3, which is Q0G8j4sakn

# Leviathan Level 3 → Level 4
ssh leviathan3@leviathan.labs.overthewire.org -p 2223
ls -al
./level3
  try the original one first
ltrace ./level3
  __libc_start_main(0x80492bf, 1, 0xffffd6a4, 0 <unfinished ...>
  strcmp("h0no33", "kakaka")                                    = -1
  printf("Enter the password> ")                                = 20
  fgets(Enter the password> dummy
  "dummy\n", 256, 0xf7e2a620)                             = 0xffffd47c
  strcmp("dummy\n", "snlprintf\n")                              = -1
  puts("bzzzzzzzzap. WRONG"bzzzzzzzzap. WRONG
  )                                    = 19
  +++ exited (status 0) +++
  like level 1-> 2, a strcmp with user input
./level3, enter snlprintf
  and then we got a shell
whoami
  leviathan4
cat /etc/leviathan_pass/leviathan4
  AgvropI4OA

# Leviathan Level 4 → Level 5
ssh leviathan4@leviathan.labs.overthewire.org -p 2223
ls -al
  there is a .trash directory which owner is root and group is leviathan4
cd .trash
ls -al
./bin
  01000101 01001011 01001011 01101100 01010100 01000110 00110001 01011000 01110001 01110011 00001010
  go to https://www.rapidtables.com/convert/number/ascii-hex-bin-dec-converter.html, turn the binary to ascii text
password is EKKlTF1Xqs

# Leviathan Level 5 → Level 6
ssh leviathan5@leviathan.labs.overthewire.org -p 2223
ls -al
./leviathan5
  Cannot find /tmp/file.log
  then let's try creating it
touch /tmp/file.log
ltrace ./leviathan5
  ltrace ./leviathan5
  __libc_start_main(0x8049206, 1, 0xffffd694, 0 <unfinished ...>
  fopen("/tmp/file.log", "r")                                   = 0x804d1a0
  fgetc(0x804d1a0)                                              = '\377'
  feof(0x804d1a0)                                               = 1
  fclose(0x804d1a0)                                             = 0
  getuid()                                                      = 12005
  setuid(12005)                                                 = 0
  unlink("/tmp/file.log")                                       = 0
  +++ exited (status 0) +++
  fgetc <-- let's put a char in file
echo "a" > /tmp/file.log
ltrace ./leviathan5
  __libc_start_main(0x8049206, 1, 0xffffd694, 0 <unfinished ...>
  fopen("/tmp/file.log", "r")                                   = 0x804d1a0
  fgetc(0x804d1a0)                                              = 'a'
  feof(0x804d1a0)                                               = 0
  putchar(97, 0x804a008, 0xf7c184be, 0xf7fbe4a0)                = 97
  fgetc(0x804d1a0)                                              = '\n'
  feof(0x804d1a0)                                               = 0
  putchar(10, 0x804a008, 0xf7c184be, 0xf7fbe4a0a
  )                = 10
  fgetc(0x804d1a0)                                              = '\377'
  feof(0x804d1a0)                                               = 1
  fclose(0x804d1a0)                                             = 0
  getuid()                                                      = 12005
  setuid(12005)                                                 = 0
  unlink("/tmp/file.log")                                       = 0
  +++ exited (status 0) +++
  it doesn't look like we could find the strcmp easily, let's make a very long string in the file
exit
scp -P 2223 leviathan5@leviathan.labs.overthewire.org:/home/leviathan5/leviathan5 .
r2 leviathan5
aa
pdf @ sym.main
  too long to put in here
  there is no strcmp, the program only open /tmp/file.log then print everything in it
  which means we need the symbolic softlink again, to make the hardcoded /tmp/file.log becomes /etc/leviathan_pass/leviathan6
ln -s /etc/leviathan_pass/leviathan6 /tmp/file.log
./leviathan5
  YZ55XPVk2l

# Leviathan Level 6 → Level 7
ssh leviathan6@leviathan.labs.overthewire.org -p 2223
ls -al
./leviathan6
  usage: ./leviathan6 <4 digit code>
ltrace ./leviathan6 1234
  __libc_start_main(0x80491d6, 2, 0xffffd694, 0 <unfinished ...>
  atoi(0xffffd7d6, 0xf7fd6f90, 0xf7c184be, 0xf7fbe4a0)          = 1234
  puts("Wrong"Wrong
  )                                                 = 6
  +++ exited (status 0) +++
  hardly see anything useful
scp -P 2223 leviathan6@leviathan.labs.overthewire.org:/home/leviathan6/leviathan6 .
r2 leviathan6
aa
pdf @ sym.main
  after the atoi, there is a "cmp dword [var_ch], eax", if not equal then will jump to Wrong
  check var_ch, it appears before checking the argument length, "mov dword [var_ch], 0x1bd3"
  find a converter to calculate from hex number 1bd3 to decimal number, result is 7123
  https://www.rapidtables.com/convert/number/hex-to-decimal.html?x=1BD3
ssh leviathan6@leviathan.labs.overthewire.org -p 2223
./leviathan6 7123
  got a shell
whoami
  leviathan7
cat /etc/leviathan_pass/leviathan7
  password is 8GpZ5f8Hze

# Leviathan Level 7 → Level 8
ssh leviathan7@leviathan.labs.overthewire.org -p 2223
ls -al
cat CONGRATULATIONS
  end of game
